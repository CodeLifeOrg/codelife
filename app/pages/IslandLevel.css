@import "../mixins.css";

/* -------------------------------
MAIN LAYOUT
------------------------------- */

/* main container */
.island {
  margin-top: var(--gutter-md);
  margin-bottom: var(--gutter-lg);
  text-align: center;
  z-index: 21; /* keep in front of clouds & nav */

  /* limit width on big screens */
  @add-mixin min-md {
    max-width: 1600px;
    margin-left: auto;
    margin-right: auto;
  }

  /* -------------------------------
  Next/Prev codeblocks
  ------------------------------- */

  /* NOTE: nesting these in .island is necessary, since they can appear on their own */
  & .island-link {
    margin-top: var(--gutter-md);
    margin-bottom: var(--gutter-md);

    /* room for two */
    @add-mixin max-sm {
      max-width: 50%; /* make sure there is indeed room for two */
      /* reset margin */
      margin-top: -2rem;
      margin-bottom: -2rem;
      /* scale down islands */
      transform: scale(0.75);

      /* scale down island text */
      & .island-link-popover {
        transform: scale(0.75);
      }

      &.is-next,
      &.is-prev {
        /* next/prev indicator base */
        &:after {
          display: block;
          /* typography */
          @add-mixin font-xxl;
          font-weight: 900;
          /* positioning */
          position: absolute;
          bottom: 2.25em;
          /* theming */
          color: var(--sky-light);
          text-shadow: 0 1px 1em var(--sky-black);
          /* transitions */
          transition: color 0.2s ease-out;
        }
        &:hover, &:focus {
          &:after {
            color: var(--white);
          }
        }
      }

      /* float them to the corresponding side */
      &.is-prev {
        float: left;

        /* visual prev indicator */
        &:after {
          content: 'ã€ˆ';
          /* positioning */
          left: -1em;
        }
      }
      &.is-next {
        float: right;

        /* visual next indicator */
        &:after {
          content: 'ã€‰';
          /* positioning */
          right: -1em;
        }
      }
    }

    /* gradually move up around the island on medium screens */
    @add-mixin min-sm {
      margin-top: -2%;
      margin-bottom: -1%;
    }

    @add-mixin min-md {
      margin-top: -4%;
    }

    /* switch to absolute positioning on large viewports */
    @add-mixin min-lg {
      position: absolute;
      top: 425px;
      margin-top: 0; /* reset */

      &.is-prev {
        left: 3%;
      }
      &.is-next {
        left: auto;
        right: 3%;
      }
    }
  }
}

/* -------------------------------
STUDENT CODEBLOCKS
------------------------------- */

.student-codeblocks-container {
  @add-mixin slide-theme; /* transparent white bg, rounded corners */
  /* sizing */
  width: 100%;
  max-width: calc(100% - var(--gutter-lg));
  /* positioning */
  display: inline-block; /* honor text-align:center from .island */
  margin-top: var(--gutter-md);
  padding: var(--gutter-lg) var(--gutter-sm);
  /* theming */
  color: var(--black);

  /* NOTE: `transform: translateY(0px)` creates a new stacking context,
  which makes the inline codeblock dialog position itself relative
  to the card list, even though it's set to `position: fixed`.
  WTF, blueprint. ðŸ˜¡ */
  & .pt-collapse-body[aria-hidden=false] {
    transform: none !important; /* fix stacking context bug */
  }

  /* no border radius on smaller viewports */
  @add-mixin max-md {
    border-radius: 0;
    max-width: 100%;
  }

  /* sizing and positioning on larger viewports */
  @add-mixin min-md {
    width: 1200px;
    padding: var(--gutter-lg) var(--gutter-md);
    margin: var(--gutter-xl) var(--gutter-md) var(--gutter-md) var(--gutter-md);
  }

  /* margin tweak when island links become absolutely positioned */
  @add-mixin min-lg {
    margin-top: 10rem;
  }

  & .card-list {
    @add-mixin card-layout-base;
    text-align: left; /* override from .overworld */

    /* stacked cards */
    @media (max-width: 599px) {
      @add-mixin card-layout-stacked;
    }

    /* 3 column layout */
    @media (min-width: 600px) {
      @add-mixin card-layout-3col;
    }

    & .card-list:not(.snippets-more) {
      margin-top: var(--gutter-md);
    }
  }


  /* -------------------------------
  Student codeblocks toggle button
  ------------------------------- */
  & .toggle-show {
    /* sizing */
    min-width: var(--button-double-width);
    /* positioning */
    display: inline-block; /* honor text-align */
    margin-top: var(--gutter-md);

    /* icon */
    & > .pt-icon-standard {
      color: inherit;
      margin-right: 0.25em;
    }
  }
}

/* -------------------------------
MAIN ISLAND
------------------------------- */

/* main island image */
.island-image {
  /* sizing */
  width: 100%;
  height: 475px;
  /* positioning */
  /* theming */
  background-position: center top;
  background-repeat: no-repeat;
  background-size: contain;

  /* progressively scale down the background image */
  @add-mixin min-xs {
    width: 140%;
    left: -20%;
  }
  @add-mixin min-sm {
    width: 100%;
    height: 600px;
    left: 0;
    background-position: center;
  }
}

/* main island title */
.island-title {
  /* sizing */
  display: inline-block;
  padding: 0.5em 1.25em;
  max-width: calc(62.5% - var(--gutter-md));
  /* positioning */
  top: 2.5em;
  z-index: 1; /* position in front of mobile island image */
  /* theming */
  background-color: var(--dark-3);
  border-radius: var(--radius-lg);
  box-shadow: 0 3px var(--gutter-xs) rgba(0, 0, 0, 0.5);
  color: var(--white);

  /* scale icon with title font size */
  & .pt-icon-large {
    margin-right: 0.5em;
    margin-left: -0.25em;
    font-size: 1em;
    opacity: 0.75;
  }
}

/* -------------------------------
Main island path
------------------------------- */

/* path container */
.island-path {
  /* positioning */
  position: absolute;
  left: 25%;
  top: 55%;
  /* sizing */
  width: 50%;
  /* layout */
  display: flex;
  justify-content: space-between;
  /* theming */
  perspective: 500px;

  /* override individual island path positioning on smaller screens */
  @add-mixin max-sm {
    /* top: 55%; */
  }

  /* account for scaled up elements */
  @add-mixin min-xs {
    left: 30%;
    width: 40%;
  }
  /* static width on larger viewports */
  @add-mixin min-sm {
    left: 50%;
    margin-left: -200px;
    width: 400px;
  }

  /* -------------------------------
  Path - line
  ------------------------------- */

  &:before {
    display: block;
    content: "";
    /* sizing */
    width: 90%; /* fudged */
    height: var(--radius-md);
    /* positioning */
    position: absolute;
    top: 10px; /* fudged */
    left: 5%;
    /* theming */
    transform: rotateX(50deg);
    transform-style: preserve-3d;

    @add-mixin min-xs {
      top: 14px;
    }

    /* static width on larger viewports */
    @add-mixin min-sm {
      width: 350px;
      height: var(--radius-lg);
      top: 16px;
    }
  }

  /* -------------------------------
  Path - dots
  ------------------------------- */

  & .stop {
    /* sizing */
    display: inline-block;
    width: var(--path-xs);
    height: var(--path-xs);
    /* positioning */
    top: -4px;
    /* theming */
    background-color: var(--dark-3);
    border-style: solid;
    border-width: 3px;
    border-radius: 100%;
    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);
    transform: rotateX(50deg);
    transform-style: preserve-3d;
    /* motion */
    transition: margin 0.2s;

    /* adjust dot size */
    @add-mixin min-xs {
      border-width: 4px;
      top: 0;
    }
    @add-mixin min-sm {
      width: var(--path-sm);
      height: var(--path-sm);
      border-width: var(--gutter-xxs);
    }
  }

  /* -------------------------------
  Path - cube
  ------------------------------- */

  & .code-block {
    /* sizing */
    display: inline-block;

    /* override island theming on big screens â€”Â used for mobile only */
    @add-mixin min-xs {
      background: none !important;
    }

    & .cube {
      width: var(--path-xs);
      height: var(--path-xs);
      /* positioning */
      top: 4px;
      /* theming */
      transform: rotateX(-33deg) translateZ(-28px) translateX(2px);
      transform-style: preserve-3d;
      /* transitions */
      transition: margin 0.2s;

      /* adjust cube size & position */
      @add-mixin min-sm {
        width: var(--path-sm);
        height: var(--path-sm);
        top: 0;
      }
    }

    /* -------------------------------
    Path - sides
    ------------------------------- */

    /* default side styles */
    & .side {
      /* positioning */
      position: absolute;
      /* sizing */
      width: var(--path-xs);
      height: var(--path-xs);
      /* theming */
      background-color: var(--black);
      border: 2px solid rgba(0, 0, 0, 0.25);
      box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.25);

      /* adjust side size */
      @add-mixin min-sm {
        width: var(--path-sm);
        height: var(--path-sm);
      }

      /* icon on front */
      & .pt-icon-standard {
        font-size: var(--gutter-xs);
        line-height: calc(var(--path-xxs) - 4px);
        top: -5px;
        transform: translateZ(var(--side-translate-xs));

        /* adjust side size */
        @add-mixin min-xs {
          font-size: var(--gutter-sm);
          line-height: calc(var(--path-xs) - 4px);
          top: 0;
        }
        @add-mixin min-sm {
          font-size: var(--path-xxs);
          line-height: calc(var(--path-sm) - 4px);
          transform: translateZ(var(--side-translate-sm));
        }
      }

      /* front side positioning */
      &.front {
        transform: translateZ(var(--side-translate-xs));

        /* adjust side positioning */
        @add-mixin min-sm {
          transform: translateZ(var(--side-translate-sm));
        }
      }

      /* left side positioning */
      &.left {
        border-left-width: var(--gutter-xxs);
        /* NOTE: 270.001deg is a hack to get the render the front face instead of the back face */
        /* See issue #500 */
        transform:
          rotateY(270.001deg)
          translateX(var(--side-translate-xs-negative));
        transform-origin: center left;

        /* adjust side positioning */
        @add-mixin min-sm {
          transform:
            rotateY(270.001deg)
            translateX(var(--side-translate-sm-negative));
        }
      }

      /* top side positioning */
      &.top {
        transform: rotateX(-270deg) translateY(var(--side-translate-xs-negative));
        transform-origin: top center;

        /* adjust side positioning */
        @add-mixin min-sm {
          transform: rotateX(-270deg) translateY(var(--side-translate-sm-negative));
        }
      }

      /* bottom side positioning */
      &.bottom {
        box-shadow: 0 2px var(--gutter-sm) rgba(0, 0, 0, 0.75);
        transform: rotateX(90deg) translateY(var(--side-translate-xs));
        transform-origin: bottom center;

        /* adjust side positioning */
        @add-mixin min-sm {
          transform: rotateX(90deg) translateY(var(--side-translate-sm));
        }
      }
    }
  }
}

/* -------------------------------
STATES & INTERACTIONS
------------------------------- */

/* Path dot states & interactions */
.stop {

  /* next up */
  &.is-next {
    animation: bounceAndFlash 2s infinite;
    background-color: var(--sandstorm); /* fallback */
  }

  /* done */
  &.is-done {
    background-color: var(--success);

    /* cheaty incomplete state */
    &.is-incomplete {
      animation: incompleteFlash 4s infinite;
    }
  }

  /* next/finished :hover state */
  &.is-next,
  &.is-done {
    &:hover, &:focus {
      margin-top: -2px;
      margin-bottom: 2px;
    }
  }
}

/* Path codeblock states & interactions */
.code-block {

  /* next up */
  &.is-next .cube {
    animation: blockBounce 2s infinite;

    /* make each side glow */
    & .side {
      animation: blockGlow 2s infinite;
      background-color: var(--sandstorm); /* fallback */
    }
  }

  /* codeblock interactions */
  &.is-next,
  &.is-done {
    &:hover, &:focus {
      cursor: pointer; /* make this div feel more like a link */
      margin-top: -2px; /* bounce that box (translate & top already in use) */
    }
  }
}

/* reposition codeblock tooltip */
.codeblock-tooltip-portal.is-below {
  position: relative;
  top: 0.5rem;
}

/* -------------------------------
SHARE / NEXT ISLAND DIALOG
------------------------------- */

/* limit share dialog width */
.share-dialog {
  max-width: 42rem;
}
/* reset hover effect on facebook icon */
.share-button[href*=facebook] {
  &:hover, &:focus {
    opacity: 0.9;
  }
}
/* move buttons inline */
.share-button-group {
  @add-mixin min-sm {
    & .share-button {
      width: calc(50% - 1rem);

      & + .share-button {
        margin-left: 2rem;
      }
    }
  }
}


/* -------------------------------
CONVERT PATH TO BUTTONS
------------------------------- */
@add-mixin max-xs {

  /* hide popovers & tooltips */
  .stop-popover {
    display: none !important;
  }

  /* hide the container background image */
  .island-image {
    background-image: none !important;
    height: auto;
  }
  /* use mobile background image instead */
  .mobile-island-image {
    /* sizing */
    width: 20rem;
    padding-top: 15rem;
    /* positioning */
    @add-mixin absolute-horizontal-center;
    top: 0;
    z-index: 0;
    /* theming */
    background-size: contain;
    background-repeat: no-repeat;
  }

  /* adjust title */
  .island .island-title {
    max-width: calc(100% - var(--gutter-md));
    top: 8rem;
  }

  /* style stops as buttons */
  .island .island-path {
    /* reset above */
    display: block;
    width: 100%;
    padding-left: var(--gutter-sm);
    padding-right: var(--gutter-sm);
    position: relative;
    left: 0;
    margin-top: 12rem;
    perspective: none;
    /* button text */
    text-align: left;

    /* hide path line */
    &:before {
      display: none;
    }

    /* adjust icon positioning */
    & .pt-icon {
      margin-right: -0.25em;
      margin-left: auto;
    }

    & .pt-icon-lock {
      opacity: 0.75;
    }

    /* space out buttons */
    & * + * {
      margin-top: 0.5rem;
    }

    /* make popover spans behave like divs */
    & .pt-popover-target {
      display: block;
    }

    & .is-next .button {
      box-shadow:
         6px  4px 0.5em color(var(--white) a(0.333)),
        -6px -4px 0.5em color(var(--white) a(0.333)),
        -6px  4px 0.5em color(var(--white) a(0.333)),
         6px -4px 0.5em color(var(--white) a(0.333));
    }

    & .pt-icon-circle-arrow-right {
      animation: arrowBounce 2.25s infinite;
      left: -5px;
    }

    /* transform stops into buttons */
    & .stop,
    & .editor-popover {
      /* sizing & positioning */
      display: block;
      width: 100%;
      height: 3rem; /* override above */
      transform: none; /* override above */
      /* theming */
      border-radius: 2em; /* fully rounded */
      background: none !important;
      box-shadow: none !important;
      border: none;
      animation: none;
      top: 0;

      &:hover, &:focus {
        top: 0;
        margin-top: 0;
        text-decoration: none;
      }

      & .u-visually-hidden {
        @add-mixin reset-visually-hidden;
        display: flex;
        align-items: center;
        line-height: 2rem;
      }

      /* reset positioning on hover */
      &.is-next:hover,
      &.is-next:focus {
        margin-bottom: 0;
      }

      &.is-locked {
        pointer-events: none;
        cursor: pointer;

        /* push icons right */
        & .button,
        & .code-block {
          background-color: var(--dark-1);
          display: flex;
          justify-content: space-between;
          align-items: center;

          &:hover {
            box-shadow: none;
          }
        }
      }
    }

    /* make codeblock cube into a button ðŸ˜¬ */
    & .editor-popover {

      & .code-block {
        overflow: visible;
        display: flex;
        width: 100%;
        height: 3em;
        align-items: center;
        justify-content: flex-start;
        line-height: 1.75em;
        padding-left: 1.75em;
        padding-right: 1.75em;
        border-radius: 1.5em;
        color: var(--white);
        /* create a new stacking context; make cube honor z-index on mobile */
        transform: scale(1);

        & .cube {
          animation: none;
          z-index: 1;
        }

        /* reset positioning for solid codeblock */
        &.is-next,
        &.is-done {
          &:hover, &:focus {
            margin-top: 8px;
          }
        }

        & .cube {
          transform: rotateX(-33deg) rotateY(20deg) translateY(-15px) translateX(20px);
          left: -2rem;

          /* fudge bottom into place */
          & .bottom {
            top: 8px;
          }
        }

        & .u-visually-hidden {
          width: auto;
          margin-right: auto;
          margin-top: 0;
        }

        & .pt-icon {
          margin-top: 0;
        }
      }
    }
  }
}

/* -------------------------------
ANIMATIONS
------------------------------- */

/* stop bounce and flash */
@keyframes bounceAndFlash {
  0%, 40%, 50%, 65%, 100% {
    background-color: var(--sandstorm);
    transform: translateY(0)rotateX(50deg);
  }
  45% {
    background-color: var(--sandstorm-light);
    transform: translateY(-4px)rotateX(50deg);
  }
  55% {
    background-color: var(--sandstorm-light);
    transform: translateY(-2px)rotateX(50deg);
  }
}

/* bouncing block */
@keyframes blockBounce {
  0%, 40%, 50%, 65%, 100% {
    transform: translateY(0)rotateX(-33deg)translateZ(-28px)translateX(2px);
  }
  45% {
    transform: translateY(-4px)rotateX(-33deg)translateZ(-28px)translateX(2px);
  }
  55% {
    transform: translateY(-2px)rotateX(-33deg)translateZ(-28px)translateX(2px);
  }
}

/* flashing block sides */
@keyframes blockGlow {
  0%, 40%, 50%, 65%, 100% {
    background-color: var(--sandstorm);
  }
  45%, 55% {
    background-color: var(--sandstorm-light);
  }
}

/* gray incomplete notifcation flash */
@keyframes incompleteFlash {
  5% {
    background-color: var(--light-2);
    border-color: var(--dark-2);
  }
}

/* bounce the arrow horizontally */
@keyframes arrowBounce {
  0%, 40%, 50%, 65%, 100% {
    transform: translateX(5px);
  }
  45%, 55% {
    transform: none;
  }
}
